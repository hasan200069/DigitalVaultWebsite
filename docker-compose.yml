version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: aegisvault-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: aegisvault
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - aegisvault-network

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: aegisvault-minio
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: admin123
    ports:
      - "9000:9000"  # API port
      - "9001:9001"  # Console port
    volumes:
      - minio_data:/data
    networks:
      - aegisvault-network

  # MinIO Client (for bucket creation)
  minio-client:
    image: minio/mc:latest
    container_name: aegisvault-minio-client
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      /usr/bin/mc alias set myminio http://minio:9000 admin admin123;
      /usr/bin/mc mb myminio/aegisvault-files --ignore-existing;
      /usr/bin/mc policy set public myminio/aegisvault-files;
      exit 0;
      "
    networks:
      - aegisvault-network

volumes:
  postgres_data:
    driver: local
  minio_data:
    driver: local

networks:
  aegisvault-network:
    driver: bridge
